DROP TABLE IF EXISTS departments


CREATE TABLE IF NOT EXISTS departments(
  department_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  department_name VARCHAR(100) NOT NULL,
  location VARCHAR(100)
);

SELECT * FROM departments

INSERT INTO departments(department_name,location) VALUES
('employees','4-floor'),
('advertising','2-floor'),
('managers','6-floor'),
('sale','1-floor');

------------------------------------------------------------
2-misol
-------------------------------------------------------------------------

DROP TABLE IF EXISTS employees;

CREATE TABLE IF NOT EXISTS employees(
  employee_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  position VARCHAR(50) NOT NULL,
  department_id INTEGER REFERENCES departments(department_id)
);

INSERT INTO employees(name,position,department_id) VALUES
('Toxir','manager',3),
('Sobir','advertiser',2),
('Jalil','seller',4);


SELECT employee_id,name,position,department_name,location FROM employees 
JOIN departments ON departments.department_id = employees.department_id

-------------------------------------------------------------------------
3-misol
-------------------------------------------------------------------------


DROP TABLE  IF EXISTS projects

CREATE TABLE IF NOT EXISTS projects(
	project_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	title VARCHAR(100) NOT NULL,
	department_id INTEGER REFERENCES departments(department_id)
);

INSERT INTO projects(title,department_id) VALUES
('Seller website',1),
('Telegram bot',3),
('ADS post',2);

SELECT project_id,title,department_name,location FROM projects 
JOIN departments ON departments.department_id = projects.department_id;

-------------------------------------------------------------------------
4-misol
-------------------------------------------------------------------------
DROP TABLE  IF EXISTS tasks;

CREATE TABLE IF NOT EXISTS tasks(
	task_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	description TEXT,
	project_id INTEGER REFERENCES projects(project_id),
	employee_id INTEGER REFERENCES employees(employee_id)
);

INSERT INTO tasks(description,project_id,employee_id) VALUES
('For market seller and online market',1,3),
('For see item',2,1);


SELECT task_id,description,title,name,position FROM tasks 
JOIN projects on projects.project_id = tasks.project_id
JOIN employees ON employees.employee_id = tasks.employee_id;

-------------------------------------------------------------
5-misol
-------------------------------------------------------------

ALTER TABLE employees
ADD COLUMN email VARCHAR(100)

SELECT * FROM employees;
--------------------------------
ALTER TABLE tasks
ALTER COLUMN description TYPE VARCHAR(255)

SELECT * FROM tasks
--------------------------------------------------

--------------------------------------------------
6-misol
--------------------------------------------------
UPDATE employees SET position = 'Senior Developer' WHERE employee_id = 1;
SELECT * FROM employees;

UPDATE projects SET title = 'New Project title' WHERE project_id = 2;
SELECT * FROM projects;


--------------------------------------------------
7-misol
--------------------------------------------------
DELETE FROM projects WHERE project_id = 3;

SELECT * FROM projects;




